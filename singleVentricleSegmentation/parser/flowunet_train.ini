[DATA]
dataset = singleVentricleData
root_dir = results/preprocessed/%(dataset)s
; For fold in [0, 1, 2, 3, 4]
fold = 0
output_dir = results/flowunet/%(dataset)s

[PARAMETERS]
num_epochs = 1000
patience = 100

; UNet, SwinUNetr, UNetr, ResUNet
net = ResUNet
; for UNetr
hidden_size = 768
mlp_dim = 3072
num_heads = 12
; for ResUNet
num_res_units = 3
; for SwinUNetr
swin_depths = (2,2,2,2)
swin_num_heads = (3,6,12,24)
swin_feature_size = 24

img_size = 80
num_layers = 4
features_start = 16
kernel_size = (3,3,3)
padding = 1
trilinear = False
;relu, prelu, leaky_relu
activation = leaky_relu
activation_slope = 0.1

loss_lambda = 1.0
loss_penalization_gamma = 0.1

batch_size = 1
num_workers = 8

; Optim Adam
lr = 1e-3
weight_decay = 3e-5

; LR Schedule
step_size = 1
gamma = 0.998

[DATA_AUGMENTATION]
; ======== Geometric transformations ========

; Flip
horizontal_flip_prob = 0.5
vertical_flip_prob = 0.5
depth_flip_prob = 0.5

; Rotation
rot_prob = 1.0
rot_x_range = (-60,60)
rot_y_range = (-60,60)
rot_z_range = (0,360)
; zeros, border, reflection
rot_boundary = zeros

; Scale
scaling_prob = 0.1
scaling_range = (0.9,1.1)
scaling_boundary = zeros

# Elastic deformation
ed_prob = 0.1
ed_grid = 8
ed_sigma_range = (0.5,2.0)
; mirror, reflect, constant, nearest
ed_boundary = nearest
; zyx, yx
ed_axis = zyx

# Low resolution
lowres_prob = 0.1
lowres_zoom_range = (0.9,1.1)

; ======== Intesity transformations ========

; Multiplicative scaling
mult_scaling_prob = 0.3
mult_scaling_range = (0.9,1.1)

; Gamma scaling
gamma_scaling_prob = 0.5
gamma_scaling_range = (0.8,1.2)
gamma_retain_stats = True

; Gaussian noise
noise_prob = 0.1
noise_mu = 0.0
noise_std_range = (0.0,0.1)

; Gaussian blur
blur_prob = 0.0
blur_sigma_range = (0.5,1.0)

; Contrast augmentation
contrast_prob = 0.15
contrast_range = (0.8,1.2)
contrast_preserve_range = True

[WARPING]
; LenghtType: numDofs or fixed
LenghtType = numDofs
; LenghtType = fixed
; LenghtZ = 1
; LenghtY = 1
; LenghtX = 1

; NEAREST, LINEAR, CUBIC_HERMITESPLINE
InterpolationType = LINEAR

; BoundaryType = NEAREST, REFLECT, MIRROR
BoundaryType = MIRROR

[DEBUG]
VERBOSE = 1
